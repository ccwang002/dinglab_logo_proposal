# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-02 21:05
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import reviews.models


class Migration(migrations.Migration):

    dependencies = [
        ('proposals', '0002_auto_20160925_1501'),
        ('reviews', '0003_auto_20160928_1908'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudySectionReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_score_list', models.CharField(max_length=512, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message=None)])),
                ('summary', models.TextField(blank=True, default='')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_reviews', to='proposals.LogoProposal')),
            ],
        ),
        migrations.AlterField(
            model_name='review',
            name='approach',
            field=reviews.models.ReviewScoreField(blank=True, help_text='The use of color, shape, pattern, and pictures. Is it captivating and easy on your eyes?', null=True, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='review',
            name='environment',
            field=reviews.models.ReviewScoreField(blank=True, default=1, help_text='Nothing. Give 1 to everyone.', null=True, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='review',
            name='innovation',
            field=reviews.models.ReviewScoreField(blank=True, help_text='Original but not at the expense of the message. Unique but not odd. Creative but not ugly.', null=True, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='review',
            name='investigator',
            field=reviews.models.ReviewScoreField(blank=True, help_text='NIH evaluates investigators to gauge the chance of getting the proposed products. We are evaluating the finished products. So, what is the point?!', null=True, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='review',
            name='overall_impact',
            field=reviews.models.ReviewScoreField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='review',
            name='significance',
            field=reviews.models.ReviewScoreField(blank=True, help_text='Symbolize key characteristics of the lab. Inspiration. Simple but meaningful.', null=True, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1)]),
        ),
    ]
